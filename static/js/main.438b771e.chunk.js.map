{"version":3,"sources":["../../string-mutilator/lib/scramble.js","../../string-mutilator/lib/reverse.js","../../string-mutilator/lib/shift.js","../../string-mutilator/index.js","../../string-mutilator/lib/index.js","../../string-mutilator/lib/char-case.js","../../string-mutilator/lib/compressor.js","../../string-mutilator/lib/flip-bits.js","../../string-mutilator/lib/jumble.js","../../string-mutilator/lib/reverse-bits.js","../../string-mutilator/lib/rockdotize.js","../../string-mutilator/lib/rot13.js","../../string-mutilator/lib/shift-bits.js","../../string-mutilator/lib/to-mans.js","definitions.js","index.js"],"names":["globalThis","self","define","_exports","Object","defineProperty","value","_default","string","split","reverse","sort","Math","random","join","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","n","arguments","undefined","e","unshift","apply","splice","module","exports","require","charCase","compressor","_flipBits","_jumble","_reverse","_reverseBits","_rockdotize","_rot","_scramble","_shift","_shiftBits","_toMans","_interopRequireDefault","obj","__esModule","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","desc","set","enumerable","flipBits","jumble","reverseBits","rockdotize","rot13","scramble","shift","shiftBits","toMANS","invert","every","replace","_char","index","String","fromCharCode","charCodeAt","signature","unpack","pack","match","map","cc0","cc1","concat","unescape","escape","withEval","fromCodePoint","parseInt","padStart","bit","jumbleWord","word","slice","runs","_","find","regexp","test","m","type","functionTypes","definitions","name","args","default","counterFn","min","max","getRealValue","result","isNaN","source","lastIndexOf","flags","RegExp","AppContext","React","createContext","AppProvider","state","input","sequences","sequenceDetails","error","definitionGroups","label","filter","definition","setInput","handleChange","isDefinition","some","getDefinition","getSequenceDefaults","arg","getSequenceOutput","reduce","previous","current","output","createSequence","updateSequence","sequence","deleteSequence","clearSequences","setState","getSequenceDetails","setSequenceDetails","parseSequenceDetails","message","proceed","buildSequenceDetails","push","definitionArgs","execute","dotString","params","o","c","stringMutilator","errorIndex","Provider","this","props","children","Component","App","className","href","target","rel","Consumer","context","onClick","event","preventDefault","Input","id","onChange","onClear","createActions","functions","createFunctions","collapsable","htmlFor","placeholder","Function","FunctionSelect","group","groupIndex","fns","fn","fnIndex","FunctionParams","lines","property","newArgs","FunctionParamRenderer","valid","bind","checked","renderer","Output","collapsed","style","display","defaultProps","CopyButton","text","previousFocus","window","activeElement","textarea","document","createElement","body","appendChild","select","setSelectionRange","execCommand","remove","focus","copyToClipboard","SequenceDetails","orientation","alert","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.438b771e.chunk.js","sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.scramble = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Randomize the order of the characters in a string.\n   * @param {string} string The string to scramble.\n   * @returns {string}\n   * @example\n   * stringMutilator.scramble('Hello World!');\n   * // > 'WorH!llo led'\n   */\n  var scramble = function scramble(string) {\n    return string.split('').reverse().sort(function () {\n      return Math.random() < 0.5 ? -1 : 1;\n    }).join('');\n  };\n\n  var _default = scramble;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.reverse = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Reverse a string.\n   * @param {string} string The input string.\n   * @returns {string}\n   * @example\n   * stringMutilator.reverse('Hello World!');\n   * // > '!dlroW olleH'\n   */\n  var reverse = function reverse(string) {\n    return string.split('').reverse().join('');\n  };\n\n  var _default = reverse;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.shift = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  /**\n   * Shift the characters of a string by `n` digits.\n   * @param {string} string The string to shift.\n   * @param {number} [n=1] Number of digits to rotate the characters.\n   *                     Positive for right rotation,\n   *                     negative for left rotation.\n   * @returns {string}\n   * @example\n   * stringMutilator.shift('Hello World!', 3);\n   * // > 'lo World!Hel'\n   */\n  var shift = function shift(string) {\n    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var e = string.split('');\n    e.unshift.apply(e, _toConsumableArray(e.splice(n % string.length)));\n    return e.join('');\n  };\n\n  var _default = shift;\n  _exports[\"default\"] = _default;\n});","module.exports = require(\"./lib\");","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"./char-case\", \"./compressor\", \"./flip-bits\", \"./jumble\", \"./reverse\", \"./reverse-bits\", \"./rockdotize\", \"./rot13\", \"./scramble\", \"./shift\", \"./shift-bits\", \"./to-mans\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"./char-case\"), require(\"./compressor\"), require(\"./flip-bits\"), require(\"./jumble\"), require(\"./reverse\"), require(\"./reverse-bits\"), require(\"./rockdotize\"), require(\"./rot13\"), require(\"./scramble\"), require(\"./shift\"), require(\"./shift-bits\"), require(\"./to-mans\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.charCase, global.compressor, global.flipBits, global.jumble, global.reverse, global.reverseBits, global.rockdotize, global.rot13, global.scramble, global.shift, global.shiftBits, global.toMans);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, charCase, compressor, _flipBits, _jumble, _reverse, _reverseBits, _rockdotize, _rot, _scramble, _shift, _shiftBits, _toMans) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"flipBits\", {\n    enumerable: true,\n    get: function get() {\n      return _flipBits[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"jumble\", {\n    enumerable: true,\n    get: function get() {\n      return _jumble[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"reverse\", {\n    enumerable: true,\n    get: function get() {\n      return _reverse[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"reverseBits\", {\n    enumerable: true,\n    get: function get() {\n      return _reverseBits[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"rockdotize\", {\n    enumerable: true,\n    get: function get() {\n      return _rockdotize[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"rot13\", {\n    enumerable: true,\n    get: function get() {\n      return _rot[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"scramble\", {\n    enumerable: true,\n    get: function get() {\n      return _scramble[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"shift\", {\n    enumerable: true,\n    get: function get() {\n      return _shift[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"shiftBits\", {\n    enumerable: true,\n    get: function get() {\n      return _shiftBits[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"toMANS\", {\n    enumerable: true,\n    get: function get() {\n      return _toMans[\"default\"];\n    }\n  });\n  _exports.compressor = _exports.charCase = _exports[\"default\"] = void 0;\n  charCase = _interopRequireWildcard(charCase);\n  _exports.charCase = charCase;\n  compressor = _interopRequireWildcard(compressor);\n  _exports.compressor = compressor;\n  _flipBits = _interopRequireDefault(_flipBits);\n  _jumble = _interopRequireDefault(_jumble);\n  _reverse = _interopRequireDefault(_reverse);\n  _reverseBits = _interopRequireDefault(_reverseBits);\n  _rockdotize = _interopRequireDefault(_rockdotize);\n  _rot = _interopRequireDefault(_rot);\n  _scramble = _interopRequireDefault(_scramble);\n  _shift = _interopRequireDefault(_shift);\n  _shiftBits = _interopRequireDefault(_shiftBits);\n  _toMans = _interopRequireDefault(_toMans);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * Functions for mutilating strings.\n   * @module stringMutilator\n   */\n  var _default = {\n    charCase: charCase,\n    compressor: compressor,\n    flipBits: _flipBits[\"default\"],\n    jumble: _jumble[\"default\"],\n    reverse: _reverse[\"default\"],\n    reverseBits: _reverseBits[\"default\"],\n    rockdotize: _rockdotize[\"default\"],\n    rot13: _rot[\"default\"],\n    scramble: _scramble[\"default\"],\n    shift: _shift[\"default\"],\n    shiftBits: _shiftBits[\"default\"],\n    toMANS: _toMans[\"default\"]\n  };\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.charCase = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.invert = _exports[\"default\"] = void 0;\n\n  /**\n   * Functions for manipulating the letter case of strings.\n   * @module stringMutilator/charCase\n   */\n\n  /**\n   * Invert the case of letters in a string.\n   * @param {string} string The string to be case inverted.\n   * @param {number} [every=0] Only invert every `n` letter.\n   * @returns {string}\n   * @example\n   * stringMutilator.charCase.invert('Hello World!');\n   * // > 'hELLO wORLD!'\n   */\n  var invert = function invert(string) {\n    var every = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return string.replace(/[a-z]/ig, function (_char, index) {\n      return String.fromCharCode(_char.charCodeAt() ^ 32 * +(!every || index % every === 0));\n    });\n  }; // TODO:\n  // * SCREAMING_SNAKE_CASE\n  // * snake_case\n  // * camelCase\n  // * kebab-case\n  // * dot.case\n  // * PascalCase\n  // * Capitalize\n\n\n  _exports.invert = invert;\n  var _default = {\n    invert: invert\n  };\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.compressor = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.signature = _exports.unpack = _exports.pack = _exports[\"default\"] = void 0;\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  /**\n   * Functions for compressing (pack/unpack etc.) strings.\n   * @module stringMutilator/compressor\n   */\n\n  /**\n   * Pack all characters of a 8-bit string.\n   * @param {string} string A 8-bit string to pack.\n   * @returns {string}\n   * @example\n   * stringMutilator.compressor.pack('Hello World!');\n   * // > '䡥汬漠坯牬搡'\n   */\n  var pack = function pack(string) {\n    return String.fromCharCode.apply(String, _toConsumableArray((string.match(/[\\S\\s]{1,2}/g) || []).map(function (e) {\n      var cc0 = e.charCodeAt(0);\n      var cc1 = e.charCodeAt(1);\n\n      if (cc0 > 0xFF || cc1 > 0xFF) {\n        throw new TypeError(\"Non ASCII character \".concat(cc0 + ', ' + cc1, \" detected!\"));\n      }\n\n      return cc0 << 8 | cc1;\n    })));\n  };\n  /**\n   * Unpack a packed string.\n   * @param {string} string The packed string to unpack.\n   * @returns {string}\n   * @example\n   * stringMutilator.compressor.unpack('䡥汬漠坯牬搡');\n   * // > 'Hello World!'\n   */\n\n\n  _exports.pack = pack;\n\n  var unpack = function unpack(string) {\n    return unescape(escape(string).replace(/u(..)/g, '$1%'));\n  };\n  /**\n   * Return the given, packed string with the unpack signature.\n   * @param {string} string The packed string to signature.\n   * @param {boolean} [withEval=false] Determine if the result includes\n   *                  a `eval` command for executing code.\n   * @returns {string}\n   * @example\n   * stringMutilator.compressor.signature('䡥汬漠坯牬搡');\n   * // > 'unescape(escape(\"䡥汬漠坯牬搡\").replace(/u(..)/g, \"$1%\");'\n   */\n\n\n  _exports.unpack = unpack;\n\n  var signature = function signature(string) {\n    var withEval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return (withEval ? 'eval(%s);' : '%s;').replace('%s', \"unescape(escape(\\\"\".concat(string, \"\\\").replace(/u(..)/g, \\\"$1%\\\"))\"));\n  };\n\n  _exports.signature = signature;\n  var _default = {\n    pack: pack,\n    unpack: unpack,\n    signature: signature\n  };\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.flipBits = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Flip the character bits of a string. The 16 character bits of 'A' are\n   * `00000000 01000001` - if we flip the bits (so every 0 becomes 1 and vice\n   * versa) they look like this `11111111 10111110`. This means that 'A' (0x41)\n   * becomes 'ﾾ' (0xFFBE).\n   * @param {string} string The input string.\n   * @return {string}\n   * @example\n   * stringMutilator.flipBits('Hello World!');\n   * // > 'ﾷﾚﾓﾓﾐ￟ﾨﾐﾍﾓﾛ￞'\n   */\n  var flipBits = function flipBits(string) {\n    return string.split('').map(function (_char) {\n      return String.fromCodePoint(parseInt(_char.charCodeAt().toString(2).padStart(16, 0).replace(/./g, function (bit) {\n        return bit === '0' ? '1' : '0';\n      }), 2));\n    }).join('');\n  };\n\n  var _default = flipBits;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"./scramble\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"./scramble\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.scramble);\n    global.jumble = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, _scramble) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n  _scramble = _interopRequireDefault(_scramble);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  /**\n   * Jumble the letters in a word string.\n   * @private\n   * @param {string} word A word string to scramble.\n   * @returns {string}\n   */\n  var jumbleWord = function jumbleWord(word) {\n    return word.slice(0, 1) + (0, _scramble[\"default\"])(word.slice(1, -1)) + word.slice(-1);\n  };\n  /**\n   * Jumble the letters of all words in a string,\n   * except the first and last one, to keep it readable.\n   * @param {string} string The input string.\n   * @param {number} [runs=3] The number of attempts to get a real randomized\n   *                        word string.\n   * @returns {string}\n   * @see https://www.mnn.com/lifestyle/arts-culture/stories/why-your-brain-can-read-jumbled-letters\n   * @example\n   * stringMutilator.jumble('Hello World!');\n   * // > 'Hlelo Wrlod!'\n   */\n\n\n  var jumble = function jumble(string) {\n    var runs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    return string.replace(/\\w{4,}/gi, function (word) {\n      return _toConsumableArray(Array(runs)).map(function (_) {\n        return jumbleWord(word);\n      }).find(function (e) {\n        return e !== word;\n      }) || word;\n    });\n  };\n\n  var _default = jumble;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"./reverse\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"./reverse\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.reverse);\n    global.reverseBits = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, _reverse) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n  _reverse = _interopRequireDefault(_reverse);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  /**\n   * Reverse the character bits of a string. The 16 character bits of 'A' are\n   * `00000000 01000001` - if we reverse the bits they look like this\n   * `10000010 00000000`. This means that 'A' (0x41) becomes '舀' (0x8200).\n   * @param {string} string The input string.\n   * @returns {string}\n   * @example\n   * stringMutilator.reverseBits('Hello World!');\n   * // > 'ሀꘀ㘀㘀Ѐ一㘀☀萀'\n   */\n  var reverseBits = function reverseBits(string) {\n    return string.split('').map(function (_char) {\n      return String.fromCodePoint(parseInt((0, _reverse[\"default\"])(_char.charCodeAt().toString(2).padStart(16, '0')), 2));\n    }).join('');\n  };\n\n  var _default = reverseBits;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.rockdotize = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Create a heavy metal like rockdot string.\n   * @param {string} string The string to rockdotize.\n   * @param {RegExp} [regexp] A RegExp to select every character that should get rockdotized.\n   * @returns {string}\n   * @see https://en.wikipedia.org/wiki/Metal_umlaut\n   * @see https://github.com/bullgit/rockdotizer\n   * @example\n   * stringMutilator.rockdotize('Hello World!');\n   * // > 'Ḧël̈l̈ö Ẅör̈l̈d̈!'\n   */\n  var rockdotize = function rockdotize(string) {\n    var regexp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\w/ig;\n    return string.replace(regexp, \"$&\\u0308\");\n  };\n\n  var _default = rockdotize;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.rot13 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Rotate the character indexes of a string by 13 digits.\n   * @param {string} string The input string.\n   * @returns {string}\n   * @see https://en.wikipedia.org/wiki/ROT13\n   * @example\n   * stringMutilator.rot13('Hello World!');\n   * // > 'Uryyb Jbeyq!'\n   */\n  var rot13 = function rot13(string) {\n    return string.replace(/[a-z]/ig, function (_char) {\n      return String.fromCharCode(_char.charCodeAt(0) + 13 - 26 * /[n-z]/i.test(_char));\n    });\n  };\n\n  var _default = rot13; // TODO: Maybe replace it with `rotN`\n\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"./shift\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"./shift\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.shift);\n    global.shiftBits = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, _shift) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n  _shift = _interopRequireDefault(_shift);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  /**\n   * Rotate the character bits of a string. The 16 character bits of 'A' are\n   * `00000000 01000001` - if we shift the bits by -4 `n` digits they look like\n   * this `00010000 00000100`. This means that 'A' (0x41) becomes 'င' (0x1004).\n   * @param {string} string The input string.\n   * @param {number} [n=1] Number of digits to rotate the character bit.\n   *                     Positive for right rotation,\n   *                     negative for left rotation.\n   * @returns {string}\n   */\n  var shiftBits = function shiftBits(string) {\n    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return string.replace(/./g, function (m) {\n      return String.fromCodePoint(parseInt((0, _shift[\"default\"])(m.charCodeAt(0).toString(2).padStart(16, '0'), n), 2));\n    });\n  };\n\n  var _default = shiftBits;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.toMans = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Convert A-Z to **M**athematical **A**lpha**n**umeric **S**ymbols.\n   *\n   * List of `type` values:\n   *\n   * | `type` | Unicode name |\n   * | --- | --- |\n   * | 0 | Mathematical Bold * |\n   * | 1 | Mathematical Italic * |\n   * | 2 | Mathematical Bold Italic * |\n   * | 3 | Mathematical Script Capital * |\n   * | 4 | Mathematical Bold Script * |\n   * | 5 | Mathematical Fraktur * |\n   * | 6 | Mathematical Double-Struck * |\n   * | 7 | Mathematical Bold Fraktur * |\n   * | 8 | Mathematical Sans-Serif * |\n   * | 9 | Mathematical Sans-Serif Bold * |\n   * | 10 | Mathematical Sans-Serif Italic * |\n   * | 11 | Mathematical Sans-Serif Bold Italic * |\n   * | 12 | Mathematical Monospace * |\n   *\n   * @param {string} string The input string.\n   * @param {number} [type=0] A number between 0 and 12.\n   * @returns {string}\n   * @see https://unicode-table.com/en/blocks/mathematical-alphanumeric-symbols\n   * @example\n   * stringMutilator.toMANS('Hello World!', 1);\n   * // > '𝐻𝑒𝑙𝑙𝑜 𝑊𝑜𝑟𝑙𝑑.'\n   */\n  var toMANS = function toMANS(string) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return string.replace(/[a-z]/gi, function (_char) {\n      return String.fromCodePoint(119808 + type * 52 + _char.charCodeAt(0) - (_char.charCodeAt() < 97 ? 65 : 71));\n    });\n  };\n\n  var _default = toMANS;\n  _exports[\"default\"] = _default;\n});","const functionTypes = {\n  involutory: 0,\n  involutoryNegatedArgs: 1,\n  involutoryCounterFn: 2,\n  nonInvolutory: 3\n};\n\nconst definitions = [\n  {\n    name: 'charCase.invert',\n    type: functionTypes.involutoryNegatedArgs,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'every', type: 'number', default: 0 }\n    ]\n  },\n  {\n    name: 'compressor.pack',\n    type: functionTypes.involutoryCounterFn,\n    counterFn: 'compressor.unpack',\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'compressor.unpack',\n    type: functionTypes.involutoryCounterFn,\n    counterFn: 'compressor.pack',\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'compressor.signature',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'withEval', type: 'boolean', default: false }\n    ]\n  },\n  {\n    name: 'flipBits',\n    type: functionTypes.involutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'jumble',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'runs', type: 'number', default: 3 }\n    ]\n  },\n  {\n    name: 'reverseBits',\n    type: functionTypes.involutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'reverse',\n    type: functionTypes.involutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'rockdotize',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'regexp', type: 'regexp', default: /\\w/gi }\n    ]\n  },\n  {\n    name: 'rot13',\n    type: functionTypes.involutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'scramble',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'shiftBits',\n    type: functionTypes.involutoryNegatedArgs,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'n', type: 'number', default: 1 }\n    ]\n  },\n  {\n    name: 'shift',\n    type: functionTypes.involutoryNegatedArgs,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'n', type: 'number', default: 1 }\n    ]\n  },\n  {\n    name: 'toMANS',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'type', type: 'number', default: 0, min: 0, max: 12 }\n    ]\n  }\n];\n\nexport default definitions;\n\nexport\n{\n  functionTypes\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport stringMutilator from '@0x04/string-mutilator';\nimport definitions, { functionTypes } from './definitions';\n\nimport './styles.scss';\n\nconst getRealValue = (string, type = 'string') =>\n{\n  switch (type)\n  {\n    default:\n      return string;\n\n    case 'number':\n      let result = parseInt(string, 10);\n\n      if (isNaN(result))\n      {\n        throw new TypeError('Number is \\'NaN\\'!');\n      }\n      return result;\n\n    case 'boolean':\n      return /^(1|true|y(es)|on?)$/.test(string);\n\n    case 'regexp':\n      let source = string.slice(1, string.lastIndexOf(string[0]));\n      let flags = string.slice(string.lastIndexOf(string[0]) + 1);\n      return new RegExp(source, flags);\n  }\n};\n\n\nconst AppContext = React.createContext({});\n\n\nclass AppProvider extends React.Component\n{\n  state = {\n    input: '',\n    sequences: [],\n    sequenceDetails: {\n      value: '',\n      error: null\n    },\n    definitions,\n    definitionGroups: [\n        'Involutory',\n        'Involutory with negated arguments',\n        'Involutory with counter function',\n        'Non involutory'\n      ].map(\n        (label, index) => [\n          label,\n          definitions\n            .filter((definition) => definition.type === index)\n            .map((definition) => definition.name)\n        ]\n      ),\n\n    setInput: (input) => this.state.handleChange({ input }),\n\n    isDefinition: (name) =>\n    {\n      return this.state.definitions\n        .some((definition) => definition.name === name);\n    },\n\n    getDefinition: (name) =>\n    {\n      let definition = this.state.definitions\n        .find((definition) => definition.name === name);\n\n      if (!definition)\n      {\n        throw new TypeError(`Definition '${name}' not found!`);\n      }\n\n      return definition;\n    },\n\n    getSequenceDefaults: (name = '') =>\n    {\n      let args = [];\n\n      if (name.length > 0)\n      {\n        args = this.state.getDefinition(name).args\n          .slice(1)\n          .map((arg) => arg.default);\n      }\n\n      return { name, args };\n    },\n\n    getSequenceOutput: (sequences) =>\n    {\n      return sequences.reduce(\n        (previous, current) => (current.error === null && current.output)\n          ? current.output\n          : previous,\n        ''\n      )\n    },\n\n    createSequence: (index = this.state.sequences.length, name = '') =>\n    {\n      if (index < 0 || index > this.state.sequences.length)\n      {\n        throw new TypeError(`Invalid index ${index}!`);\n      }\n\n      let sequences = this.state.sequences.concat();\n\n      sequences.splice(index, 0, this.state.getSequenceDefaults(name));\n\n      this.state.handleChange({ sequences });\n    },\n\n    updateSequence: (index, name = '', args = []) =>\n    {\n      if (index < 0 || index >= this.state.sequences.length)\n      {\n        throw new TypeError(`Invalid index ${index}!`);\n      }\n\n      let sequences = this.state.sequences.concat();\n      let sequence = { ...sequences[index], name, args };\n\n      if (sequences[index].name !== name)\n      {\n        sequence.args = this.state.getSequenceDefaults(name).args;\n      }\n\n      sequences.splice(index, 1, sequence);\n\n      this.state.handleChange({ sequences });\n    },\n\n    deleteSequence: (index) =>\n    {\n      if (index < 0 || index >= this.state.sequences.length)\n      {\n        throw new TypeError(`Invalid index ${index}!`);\n      }\n\n      let sequences = this.state.sequences.concat();\n\n      sequences.splice(index, 1);\n\n      this.state.handleChange({ sequences });\n    },\n\n    clearSequences: () => this.setState({ sequences: [] }),\n\n    getSequenceDetails: () => this.state.sequenceDetails.value,\n\n    setSequenceDetails: (string) => {\n      let sequences = [];\n      let sequenceDetails = { value: string, error: null };\n\n      try\n      {\n        if (string.length > 0)\n        {\n          sequences = this.state.parseSequenceDetails(string);\n        }\n      }\n      catch (e)\n      {\n        sequenceDetails.error = e.message;\n      }\n\n      this.state.proceed(this.state.input, sequences);\n\n      let output = this.state.getSequenceOutput(sequences) || this.state.input;\n\n      this.setState({ output, sequences, sequenceDetails });\n    },\n\n    buildSequenceDetails: (sequences = this.state.sequences) => sequences\n      .map((sequence) =>\n      {\n        let result = [];\n\n        if (sequence.name)\n        {\n          result.push(sequence.name);\n\n          if (sequence.args.length > 0)\n          {\n            result.push(`,${sequence.args.join(',')}`);\n          }\n        }\n\n        return (result.length > 0)\n          ? result.join('')\n          : null;\n      })\n      .filter((value) => value !== null)\n      .join('|'),\n\n    parseSequenceDetails: (string) => string.split(/\\s*\\|\\s*/)\n      .map((value) =>\n      {\n        let [ name, ...args ] = value.split(/\\s*,\\s*/);\n        let definitionArgs = this.state.getDefinition(name).args.slice(1);\n\n        if (args.length !== definitionArgs.length)\n        {\n          throw new TypeError(`Wrong number of arguments for '${name}'!`);\n        }\n\n        args = args.map(\n          (value, index) => getRealValue(value, definitionArgs[index].type)\n        );\n\n        return { name, args };\n      }),\n\n    execute: (dotString, params) =>\n    {\n      const fn = dotString\n        .split('.')\n        .reduce((o, c) => o[c], stringMutilator);\n\n      return fn.apply(null, params);\n    },\n\n    proceed: (input, sequences) =>\n    {\n      let previous;\n      let errorIndex = -1;\n\n      for (let i = 0; i < sequences.length; i++)\n      {\n        let current = sequences[i];\n\n        try\n        {\n          current.error = null;\n\n          if ((errorIndex > -1 && errorIndex < i) || !current.name)\n          {\n            current.output = '';\n          }\n          else\n          {\n            current.output = this.state.execute(\n              current.name,\n              [ previous?.output || input, ...current.args ]\n            );\n          }\n        }\n        catch (e)\n        {\n          current.output = '';\n          current.error = e.message;\n          errorIndex = i;\n        }\n\n        previous = current;\n      }\n\n      return sequences;\n    },\n\n    handleChange: ({\n      input = this.state.input,\n      sequences = this.state.sequences.concat(),\n      sequenceDetails = { ...this.state.sequenceDetails }\n    }) =>\n    {\n      this.state.proceed(input, sequences);\n\n      let output = this.state.getSequenceOutput(sequences) || input;\n\n      try\n      {\n        sequenceDetails.error = null;\n        sequenceDetails.value = this.state.buildSequenceDetails(sequences);\n      }\n      catch (e) {\n        sequenceDetails.error = e.message;\n      }\n\n      this.setState({ input, output, sequences, sequenceDetails });\n    }\n  }\n\n  render() {\n    return (\n      <AppContext.Provider value={this.state}>\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\n\nconst blindText = 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. '\n  + 'Esse explicabo nesciunt nulla? Adipisci consequuntur cum debitis enim '\n  + 'exercitationem ipsa minima natus nulla, obcaecati porro provident quia '\n  + 'quo ullam vel voluptate.';\n\n\nconst App = () => {\n  function createActions(context) {\n    return (\n      <div className=\"action-container\">\n        <div className=\"spacer\"/>\n        <button\n          className=\"action action-clear\"\n          onClick={() => context.clearSequences()}>\n          Clear Functions\n        </button>\n        <button\n          className=\"action action-create\"\n          onClick={() => context.createSequence(0)}>\n          Add Function\n        </button>\n      </div>\n    )\n  }\n\n  function createFunctions(context) {\n    let functions = context.sequences.map(\n      (sequence, index) => <Function\n        key={index}\n        index={index}\n        name={sequence.name}\n      />\n    )\n\n    return (\n      <div className=\"functions-container\">\n        {functions}\n      </div>\n    )\n  }\n\n  return (\n    <AppProvider>\n      <div className=\"app-component\">\n        <h1 className=\"title\">Pseudo Cipherer</h1>\n        <div className=\"description\">\n          <p>A demonstration of the <code>\n            <a\n              href=\"https://github.com/0x04/string-mutilator\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              @0x04/string-mutilator\n            </a>\n          </code> package.\n          </p>\n          <p>\n            Enter some text or use the <AppContext.Consumer>\n            {\n              (context) => <button className=\"action-link\" onClick={(event) => {\n                event.preventDefault()\n                context.setInput(blindText)\n              }}>blind text</button>\n            }\n          </AppContext.Consumer> and add a function to see the result in\n            the output pane.\n          </p>\n        </div>\n        <AppContext.Consumer>\n          {(context) => (\n            <>\n              <Input\n                id=\"string-input\"\n                label=\"Input\"\n                value={context.input}\n                onChange={(event) => context.setInput(event.target.value)}\n                onClear={() => context.setInput('')}\n              />\n              {createActions(context)}\n              {createFunctions(context)}\n              <Output\n                label=\"Output\"\n                value={context.output}\n                collapsable={false}\n              />\n              <SequenceDetails />\n            </>\n          )}\n        </AppContext.Consumer>\n      </div>\n    </AppProvider>\n  )\n};\n\n\nfunction Input(props)\n{\n  return (\n    <div className=\"input-component\">\n      <label htmlFor={props.id}>{props.label}</label>\n      <div className=\"horizontal-container\">\n        <textarea\n          id={props.id}\n          className=\"input\"\n          value={props.value}\n          onChange={props.onChange}\n          placeholder=\"Please enter text&hellip;\"\n        />\n        <input\n          type=\"reset\"\n          value=\"Clear\"\n          onClick={props.onClear}\n        />\n      </div>\n    </div>\n  );\n}\n\n\nconst Function = (props) =>\n{\n  return (\n    <div className=\"function-component\">\n      <AppContext.Consumer>\n        {(context) => (\n          <div className=\"horizontal-container\">\n            <div className=\"function-container\">\n              <FunctionSelect index={props.index} name={props.name}/>\n              {\n                (context.isDefinition(props.name) && context.getDefinition(props.name).args.length > 1)\n                  ? <FunctionParams index={props.index} name={props.name}/>\n                  : null\n              }\n              {\n                (context.sequences[props.index].error)\n                  ? <div className=\"error-container\">\n                      {context.sequences[props.index].error}\n                    </div>\n                  : null\n              }\n              <Output label=\"Output\" value={context.sequences[props.index].output} />\n            </div>\n            <div className=\"action-container\">\n              <button\n                className=\"action action-delete\"\n                onClick={() => context.deleteSequence(props.index)}>\n                Remove Function\n              </button>\n              <button\n                className=\"action action-create\"\n                onClick={() => context.createSequence(props.index + 1)}>\n                Add Function\n              </button>\n            </div>\n          </div>\n        )}\n      </AppContext.Consumer>\n    </div>\n  );\n};\n\n\nconst FunctionSelect = (props) =>\n{\n  return (\n    <div className=\"function-select-component\">\n      <label>\n        <span>Function</span>\n        <AppContext.Consumer>\n          {\n            (context) => <select\n              value={props.name}\n              onChange={(event) => context.updateSequence(props.index, event.target.value)}>\n              <option value=\"\" />\n              {\n                context.definitionGroups.map((group, groupIndex) =>\n                {\n                  const [ label, fns ] = group;\n\n                  return <optgroup key={groupIndex} label={label}>\n                    {\n                      fns.map(\n                        (fn, fnIndex) => <option key={fnIndex} value={fn}>{fn}</option>\n                      )\n                    }\n                  </optgroup>\n                })\n              }\n            </select>\n          }\n        </AppContext.Consumer>\n      </label>\n    </div>\n  );\n};\n\n\nconst FunctionParams = (props) =>\n{\n  return (\n    <div className=\"function-params-component\">\n      <table className=\"function-params\">\n        <thead>\n          <tr>\n            <th>Argument</th>\n            <th>Type</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <AppContext.Consumer>\n          {\n            (context) => {\n              const args = context.sequences[props.index].args\n              const lines = context.getDefinition(props.name).args.slice(1).map(\n                (property, index) => <tr key={index}>\n                  <td>{property.name}</td>\n                  <td>{property.type}</td>\n                  <td>\n                    <FunctionParamRenderer\n                      onChange={(value) => {\n                        const newArgs = args.concat()\n                        newArgs.splice(index, 1, value)\n                        context.updateSequence(props.index, props.name, newArgs)\n                      }}\n                      {...property}\n                      value={args[index]}\n                    />\n                  </td>\n                </tr>\n              );\n              return (<tbody>{lines}</tbody>);\n            }\n          }\n        </AppContext.Consumer>\n      </table>\n    </div>\n  );\n};\n\n\nclass FunctionParamRenderer extends React.Component\n{\n  state = {\n    valid: true\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event)\n  {\n    let valid = true;\n    let value = (event.target.type === 'checkbox')\n      ? event.target.checked\n      : event.target.value;\n\n    try {\n      value = getRealValue(value, this.props.type);\n    }\n    catch (e) {\n      valid = false;\n    }\n\n    this.setState({ valid });\n\n    this.props.onChange\n      && this.props.onChange(value);\n  }\n\n  render()\n  {\n    let renderer = <div />;\n\n    switch (this.props.type)\n    {\n      default:\n      case 'number':\n        renderer = <input\n          type=\"number\"\n          min={this.props.min}\n          max={this.props.max}\n          value={this.props.value}\n          onChange={this.handleChange}\n        />;\n        break;\n\n      case 'boolean':\n        renderer = <input\n          type=\"checkbox\"\n          checked={this.props.value}\n          onChange={this.handleChange}\n        />\n        break;\n\n      case 'regexp':\n        renderer = <input\n          type=\"text\"\n          value={this.props.value}\n          className={!this.state.valid ? 'invalid' : null}\n          onChange={this.handleChange}\n        />\n        break;\n    }\n\n    return (\n      <div className={`function-param-renderer type-${this.props.type}`}>\n        {renderer}\n      </div>\n    );\n  }\n}\n\n\nclass Output extends React.Component\n{\n  static defaultProps = {\n    collapsable: true\n  }\n\n  state = {\n    collapsed: true\n  }\n\n  render()\n  {\n    return (\n      <div\n        className={'output-component' + (this.props.collapsable && this.state.collapsed ? ' collapsed' : '')}>\n        <div className=\"label\">\n          {\n            (this.props.collapsable)\n              ? <button\n                  className=\"action-link\"\n                  onClick={() => this.setState({ collapsed: !this.state.collapsed })}>\n                  {this.props.label}\n                </button>\n              : <span>{this.props.label}</span>\n          }\n        </div>\n        <div\n          className=\"content\"\n          style={{ display: !this.props.collapsable || !this.state.collapsed ? 'block' : 'none' }}>\n          <div className=\"horizontal-container\">\n            <pre className=\"output\">\n              {this.props.value}\n            </pre>\n            <CopyButton value={this.props.value} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass CopyButton extends React.Component\n{\n  static defaultProps = {\n    value: ''\n  }\n\n  copyToClipboard(text)\n  {\n    const previousFocus = window.activeElement;\n    const textarea = document.createElement('textarea');\n    textarea.className = 'copy-button-helper';\n    textarea.value = text;\n\n    document.body.appendChild(textarea);\n\n    textarea.select();\n    // For mobile devices\n    textarea.setSelectionRange(0, textarea.value.length);\n\n    document.execCommand('copy');\n\n    textarea.remove();\n\n    previousFocus && previousFocus.focus();\n  }\n\n  render()\n  {\n    return (\n      <button\n        className=\"action action-copy\"\n        onClick={() => this.copyToClipboard(this.props.value)}>\n        Copy\n      </button>\n    );\n  }\n}\n\n\nclass SequenceDetails extends React.Component\n{\n  state = {\n    orientation: false\n  }\n\n  render()\n  {\n    return (\n      <AppContext.Consumer>\n        {(context) => (\n          <div className=\"sequence-details-component\">\n            <div className=\"label\">Cipher-Sequence</div>\n            <div className=\"horizontal-container\">\n              <div className=\"vertical-container\">\n                <textarea\n                  value={context.getSequenceDetails()}\n                  onChange={(event) => context.setSequenceDetails(event.target.value)}\n                />\n                {\n                  (context.sequenceDetails.error)\n                    ? <div className=\"error-container\">{context.sequenceDetails.error}</div>\n                    : null\n                }\n              </div>\n              <button\n                className=\"action action-invert\"\n                onClick={() => alert('Not implemented yet!')}>\n                Invert\n              </button>\n            </div>\n          </div>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}