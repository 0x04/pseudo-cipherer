{"version":3,"sources":["../../string-mutilator/lib/to-mans.js","../../string-mutilator/lib/scramble.js","../../string-mutilator/lib/reverse.js","../../string-mutilator/lib/shift.js","../../string-mutilator/index.js","../../string-mutilator/lib/index.js","../../string-mutilator/lib/char-case.js","../../string-mutilator/lib/compressor.js","../../string-mutilator/lib/flip-bits.js","../../string-mutilator/lib/gobbledygook.js","../../string-mutilator/lib/jumble.js","../../string-mutilator/lib/reverse-bits.js","../../string-mutilator/lib/rockdotize.js","../../string-mutilator/lib/rot13.js","../../string-mutilator/lib/shift-bits.js","../../string-mutilator/lib/unicode.js","definitions.js","index.js"],"names":["globalThis","self","define","_exports","Object","defineProperty","value","_default","string","type","arguments","length","undefined","replace","_char","String","fromCodePoint","charCodeAt","split","reverse","sort","Math","random","join","_toConsumableArray","arr","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","n","e","unshift","apply","splice","module","exports","require","charCase","compressor","_flipBits","_gobbledygook","_jumble","_reverse","_reverseBits","_rockdotize","_rot","_scramble","_shift","_shiftBits","_toMans","unicode","_interopRequireDefault","obj","__esModule","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","desc","set","enumerable","flipBits","gobbledygook","jumble","reverseBits","rockdotize","rot13","scramble","shift","shiftBits","toMANS","invert","every","index","fromCharCode","signature","unpack","pack","match","map","cc0","cc1","concat","unescape","escape","withEval","parseInt","padStart","bit","getRandomType","exclude","result","round","includes","jumbleWord","word","slice","runs","_","find","regexp","test","m","unfixSurrogates","fixSurrogates","isHighSurrogate","isLowSurrogate","_char2","functionTypes","definitions","name","args","default","counterFn","min","max","getRealValue","isNaN","source","lastIndexOf","flags","RegExp","AppContext","React","createContext","AppProvider","state","input","output","sequences","sequenceString","error","definitionGroups","label","filter","definition","setInput","handleChange","isDefinition","some","getDefinition","getSequenceDefaults","arg","getSequenceOutput","reduce","previous","current","createSequence","updateSequence","sequence","deleteSequence","clearSequences","setState","invertSequences","forEach","setSequenceString","parseSequenceString","message","proceed","buildSequenceString","push","definitionArgs","execute","dotString","params","o","c","stringMutilator","errorIndex","Provider","this","props","children","Component","App","className","href","target","rel","Consumer","context","onClick","event","preventDefault","Input","id","onChange","onClear","createActions","functions","onRemoveClick","onAddClick","createFunctions","collapsable","htmlFor","placeholder","Function","clsx","FunctionSelect","group","groupIndex","fns","fn","fnIndex","FunctionParams","lines","property","newArgs","FunctionParamRenderer","valid","bind","checked","renderer","Output","collapsed","style","display","defaultProps","CopyButton","text","previousFocus","window","activeElement","textarea","document","createElement","body","appendChild","select","setSelectionRange","execCommand","remove","focus","copyToClipboard","SequenceString","orientation","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.43828cb6.chunk.js","sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.toMans = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Convert A-Z to **M**athematical **A**lpha**n**umeric **S**ymbols.\n   *\n   * List of `type` values:\n   *\n   * | `type` | Unicode name |\n   * | --- | --- |\n   * | 0 | Mathematical Bold * |\n   * | 1 | Mathematical Italic * |\n   * | 2 | Mathematical Bold Italic * |\n   * | 3 | Mathematical Script Capital * |\n   * | 4 | Mathematical Bold Script * |\n   * | 5 | Mathematical Fraktur * |\n   * | 6 | Mathematical Double-Struck * |\n   * | 7 | Mathematical Bold Fraktur * |\n   * | 8 | Mathematical Sans-Serif * |\n   * | 9 | Mathematical Sans-Serif Bold * |\n   * | 10 | Mathematical Sans-Serif Italic * |\n   * | 11 | Mathematical Sans-Serif Bold Italic * |\n   * | 12 | Mathematical Monospace * |\n   *\n   * @param {string} string The input string.\n   * @param {number} [type=0] A number between 0 and 12.\n   * @returns {string}\n   * @see https://unicode-table.com/en/blocks/mathematical-alphanumeric-symbols\n   * @example\n   * stringMutilator.toMANS('Hello World!', 1);\n   * // > '𝐻𝑒𝑙𝑙𝑜 𝑊𝑜𝑟𝑙𝑑.'\n   */\n  var toMANS = function toMANS(string) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return string.replace(/[a-z]/gi, function (_char) {\n      return String.fromCodePoint(119808 + type * 52 + _char.charCodeAt(0) - (_char.charCodeAt() < 97 ? 65 : 71));\n    });\n  };\n\n  var _default = toMANS;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.scramble = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Randomize the order of the characters in a string.\n   * @param {string} string The string to scramble.\n   * @returns {string}\n   * @example\n   * stringMutilator.scramble('Hello World!');\n   * // > 'WorH!llo led'\n   */\n  var scramble = function scramble(string) {\n    return string.split('').reverse().sort(function () {\n      return Math.random() < 0.5 ? -1 : 1;\n    }).join('');\n  };\n\n  var _default = scramble;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.reverse = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Reverse a string.\n   * @param {string} string The input string.\n   * @returns {string}\n   * @example\n   * stringMutilator.reverse('Hello World!');\n   * // > '!dlroW olleH'\n   */\n  var reverse = function reverse(string) {\n    return string.split('').reverse().join('');\n  };\n\n  var _default = reverse;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.shift = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  /**\n   * Shift the characters of a string by `n` digits.\n   * @param {string} string The string to shift.\n   * @param {number} [n=1] Number of digits to rotate the characters.\n   *                     Positive for right rotation,\n   *                     negative for left rotation.\n   * @returns {string}\n   * @example\n   * stringMutilator.shift('Hello World!', 3);\n   * // > 'lo World!Hel'\n   */\n  var shift = function shift(string) {\n    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var e = string.split('');\n    e.unshift.apply(e, _toConsumableArray(e.splice(n % string.length)));\n    return e.join('');\n  };\n\n  var _default = shift;\n  _exports[\"default\"] = _default;\n});","module.exports = require(\"./lib\");","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"./char-case\", \"./compressor\", \"./flip-bits\", \"./gobbledygook\", \"./jumble\", \"./reverse\", \"./reverse-bits\", \"./rockdotize\", \"./rot13\", \"./scramble\", \"./shift\", \"./shift-bits\", \"./to-mans\", \"./unicode\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"./char-case\"), require(\"./compressor\"), require(\"./flip-bits\"), require(\"./gobbledygook\"), require(\"./jumble\"), require(\"./reverse\"), require(\"./reverse-bits\"), require(\"./rockdotize\"), require(\"./rot13\"), require(\"./scramble\"), require(\"./shift\"), require(\"./shift-bits\"), require(\"./to-mans\"), require(\"./unicode\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.charCase, global.compressor, global.flipBits, global.gobbledygook, global.jumble, global.reverse, global.reverseBits, global.rockdotize, global.rot13, global.scramble, global.shift, global.shiftBits, global.toMans, global.unicode);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, charCase, compressor, _flipBits, _gobbledygook, _jumble, _reverse, _reverseBits, _rockdotize, _rot, _scramble, _shift, _shiftBits, _toMans, unicode) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"flipBits\", {\n    enumerable: true,\n    get: function get() {\n      return _flipBits[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"gobbledygook\", {\n    enumerable: true,\n    get: function get() {\n      return _gobbledygook[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"jumble\", {\n    enumerable: true,\n    get: function get() {\n      return _jumble[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"reverse\", {\n    enumerable: true,\n    get: function get() {\n      return _reverse[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"reverseBits\", {\n    enumerable: true,\n    get: function get() {\n      return _reverseBits[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"rockdotize\", {\n    enumerable: true,\n    get: function get() {\n      return _rockdotize[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"rot13\", {\n    enumerable: true,\n    get: function get() {\n      return _rot[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"scramble\", {\n    enumerable: true,\n    get: function get() {\n      return _scramble[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"shift\", {\n    enumerable: true,\n    get: function get() {\n      return _shift[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"shiftBits\", {\n    enumerable: true,\n    get: function get() {\n      return _shiftBits[\"default\"];\n    }\n  });\n  Object.defineProperty(_exports, \"toMANS\", {\n    enumerable: true,\n    get: function get() {\n      return _toMans[\"default\"];\n    }\n  });\n  _exports.unicode = _exports.compressor = _exports.charCase = _exports[\"default\"] = void 0;\n  charCase = _interopRequireWildcard(charCase);\n  _exports.charCase = charCase;\n  compressor = _interopRequireWildcard(compressor);\n  _exports.compressor = compressor;\n  _flipBits = _interopRequireDefault(_flipBits);\n  _gobbledygook = _interopRequireDefault(_gobbledygook);\n  _jumble = _interopRequireDefault(_jumble);\n  _reverse = _interopRequireDefault(_reverse);\n  _reverseBits = _interopRequireDefault(_reverseBits);\n  _rockdotize = _interopRequireDefault(_rockdotize);\n  _rot = _interopRequireDefault(_rot);\n  _scramble = _interopRequireDefault(_scramble);\n  _shift = _interopRequireDefault(_shift);\n  _shiftBits = _interopRequireDefault(_shiftBits);\n  _toMans = _interopRequireDefault(_toMans);\n  unicode = _interopRequireWildcard(unicode);\n  _exports.unicode = unicode;\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * Functions for mutilating strings.\n   * @module stringMutilator\n   */\n  var _default = {\n    charCase: charCase,\n    compressor: compressor,\n    flipBits: _flipBits[\"default\"],\n    gobbledygook: _gobbledygook[\"default\"],\n    jumble: _jumble[\"default\"],\n    reverse: _reverse[\"default\"],\n    reverseBits: _reverseBits[\"default\"],\n    rockdotize: _rockdotize[\"default\"],\n    rot13: _rot[\"default\"],\n    scramble: _scramble[\"default\"],\n    shift: _shift[\"default\"],\n    shiftBits: _shiftBits[\"default\"],\n    toMANS: _toMans[\"default\"],\n    unicode: unicode\n  };\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.charCase = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.invert = _exports[\"default\"] = void 0;\n\n  /**\n   * Functions for manipulating the letter case of strings.\n   * @module stringMutilator/charCase\n   */\n\n  /**\n   * Invert the case of letters in a string.\n   * @param {string} string The string to be case inverted.\n   * @param {number} [every=0] Only invert every `n` letter.\n   * @returns {string}\n   * @example\n   * stringMutilator.charCase.invert('Hello World!');\n   * // > 'hELLO wORLD!'\n   */\n  var invert = function invert(string) {\n    var every = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return string.replace(/[a-z]/ig, function (_char, index) {\n      return String.fromCharCode(_char.charCodeAt() ^ 32 * +(!every || index % every === 0));\n    });\n  }; // TODO:\n  // * SCREAMING_SNAKE_CASE\n  // * snake_case\n  // * camelCase\n  // * kebab-case\n  // * dot.case\n  // * PascalCase\n  // * Capitalize\n\n\n  _exports.invert = invert;\n  var _default = {\n    invert: invert\n  };\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.compressor = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.signature = _exports.unpack = _exports.pack = _exports[\"default\"] = void 0;\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  /**\n   * Functions for compressing (pack/unpack etc.) strings.\n   * @module stringMutilator/compressor\n   */\n\n  /**\n   * Pack all characters of a 8-bit string.\n   * @param {string} string A 8-bit string to pack.\n   * @returns {string}\n   * @example\n   * stringMutilator.compressor.pack('Hello World!');\n   * // > '䡥汬漠坯牬搡'\n   */\n  var pack = function pack(string) {\n    return String.fromCharCode.apply(String, _toConsumableArray((string.match(/[\\S\\s]{1,2}/g) || []).map(function (e) {\n      var cc0 = e.charCodeAt(0);\n      var cc1 = e.charCodeAt(1);\n\n      if (cc0 > 0xFF || cc1 > 0xFF) {\n        throw new TypeError(\"Non ASCII character \".concat(cc0 + ', ' + cc1, \" detected!\"));\n      }\n\n      return cc0 << 8 | cc1;\n    })));\n  };\n  /**\n   * Unpack a packed string.\n   * @param {string} string The packed string to unpack.\n   * @returns {string}\n   * @example\n   * stringMutilator.compressor.unpack('䡥汬漠坯牬搡');\n   * // > 'Hello World!'\n   */\n\n\n  _exports.pack = pack;\n\n  var unpack = function unpack(string) {\n    return unescape(escape(string).replace(/u(..)/g, '$1%'));\n  };\n  /**\n   * Return the given, packed string with the unpack signature.\n   * @param {string} string The packed string to signature.\n   * @param {boolean} [withEval=false] Determine if the result includes\n   *                  a `eval` command for executing code.\n   * @returns {string}\n   * @example\n   * stringMutilator.compressor.signature('䡥汬漠坯牬搡');\n   * // > 'unescape(escape(\"䡥汬漠坯牬搡\").replace(/u(..)/g, \"$1%\");'\n   */\n\n\n  _exports.unpack = unpack;\n\n  var signature = function signature(string) {\n    var withEval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return (withEval ? 'eval(%s);' : '%s;').replace('%s', \"unescape(escape(\\\"\".concat(string, \"\\\").replace(/u(..)/g, \\\"$1%\\\"))\"));\n  };\n\n  _exports.signature = signature;\n  var _default = {\n    pack: pack,\n    unpack: unpack,\n    signature: signature\n  };\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.flipBits = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Flip the character bits of a string. The 16 character bits of 'A' are\n   * `00000000 01000001` - if we flip the bits (so every 0 becomes 1 and vice\n   * versa) they look like this `11111111 10111110`. This means that 'A' (0x41)\n   * becomes 'ﾾ' (0xFFBE).\n   * @param {string} string The input string.\n   * @return {string}\n   * @example\n   * stringMutilator.flipBits('Hello World!');\n   * // > 'ﾷﾚﾓﾓﾐ￟ﾨﾐﾍﾓﾛ￞'\n   */\n  var flipBits = function flipBits(string) {\n    return string.split('').map(function (_char) {\n      return String.fromCodePoint(parseInt(_char.charCodeAt().toString(2).padStart(16, 0).replace(/./g, function (bit) {\n        return bit === '0' ? '1' : '0';\n      }), 2));\n    }).join('');\n  };\n\n  var _default = flipBits;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"./to-mans\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"./to-mans\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.toMans);\n    global.gobbledygook = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, _toMans) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n  _toMans = _interopRequireDefault(_toMans);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  /**\n   * Returns a random `type` for `toMANS` (0-12).\n   * @private\n   * @param {array} [exclude=[]] Exclude specific `type`\n   * @returns {number}\n   */\n  var getRandomType = function getRandomType() {\n    var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var result = 0;\n\n    do {\n      result = Math.round(Math.random() * 12);\n    } while (exclude.includes(result));\n\n    return result;\n  };\n  /**\n   * Applies `toMANS` to all characters with a random `type`.\n   * For example `Hello World` turns into `𝐇𝖾𝓵𝗹𝘰 𝔚𝗈𝒓𝔩𝔡`.\n   * @param {string} string The input string\n   * @param {array} [exclude=[ 1, 2 ]] Exclude specific `type` of `toMANS`\n   * @returns {string}\n   * @example\n   * stringMutilator.gobbledygook('Hello World');\n   * // > 𝐇𝖾𝓵𝗹𝘰 𝔚𝗈𝒓𝔩𝔡\n   */\n\n\n  var gobbledygook = function gobbledygook(string) {\n    var exclude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [1, 3];\n    return string.replace(/[a-z]/gi, function (_char) {\n      return (0, _toMans[\"default\"])(_char, getRandomType(exclude));\n    });\n  };\n\n  var _default = gobbledygook;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"./scramble\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"./scramble\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.scramble);\n    global.jumble = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, _scramble) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n  _scramble = _interopRequireDefault(_scramble);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  /**\n   * Jumble the letters in a word string.\n   * @private\n   * @param {string} word A word string to scramble.\n   * @returns {string}\n   */\n  var jumbleWord = function jumbleWord(word) {\n    return word.slice(0, 1) + (0, _scramble[\"default\"])(word.slice(1, -1)) + word.slice(-1);\n  };\n  /**\n   * Jumble the letters of all words in a string,\n   * except the first and last one, to keep it readable.\n   * @param {string} string The input string.\n   * @param {number} [runs=3] The number of attempts to get a real randomized\n   *                        word string.\n   * @returns {string}\n   * @see https://www.mnn.com/lifestyle/arts-culture/stories/why-your-brain-can-read-jumbled-letters\n   * @example\n   * stringMutilator.jumble('Hello World!');\n   * // > 'Hlelo Wrlod!'\n   */\n\n\n  var jumble = function jumble(string) {\n    var runs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    return string.replace(/\\w{4,}/gi, function (word) {\n      return _toConsumableArray(Array(runs)).map(function (_) {\n        return jumbleWord(word);\n      }).find(function (e) {\n        return e !== word;\n      }) || word;\n    });\n  };\n\n  var _default = jumble;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"./reverse\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"./reverse\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.reverse);\n    global.reverseBits = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, _reverse) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n  _reverse = _interopRequireDefault(_reverse);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  /**\n   * Reverse the character bits of a string. The 16 character bits of 'A' are\n   * `00000000 01000001` - if we reverse the bits they look like this\n   * `10000010 00000000`. This means that 'A' (0x41) becomes '舀' (0x8200).\n   * @param {string} string The input string.\n   * @returns {string}\n   * @example\n   * stringMutilator.reverseBits('Hello World!');\n   * // > 'ሀꘀ㘀㘀Ѐ一㘀☀萀'\n   */\n  var reverseBits = function reverseBits(string) {\n    return string.split('').map(function (_char) {\n      return String.fromCodePoint(parseInt((0, _reverse[\"default\"])(_char.charCodeAt().toString(2).padStart(16, '0')), 2));\n    }).join('');\n  };\n\n  var _default = reverseBits;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.rockdotize = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Create a heavy metal like rockdot string.\n   * @param {string} string The string to rockdotize.\n   * @param {RegExp} [regexp] A RegExp to select every character that should get rockdotized.\n   * @returns {string}\n   * @see https://en.wikipedia.org/wiki/Metal_umlaut\n   * @see https://github.com/bullgit/rockdotizer\n   * @example\n   * stringMutilator.rockdotize('Hello World!');\n   * // > 'Ḧël̈l̈ö Ẅör̈l̈d̈!'\n   */\n  var rockdotize = function rockdotize(string) {\n    var regexp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\w/ig;\n    return string.replace(regexp, \"$&\\u0308\");\n  };\n\n  var _default = rockdotize;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.rot13 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n\n  /**\n   * Rotate the character indexes of a string by 13 digits.\n   * @param {string} string The input string.\n   * @returns {string}\n   * @see https://en.wikipedia.org/wiki/ROT13\n   * @example\n   * stringMutilator.rot13('Hello World!');\n   * // > 'Uryyb Jbeyq!'\n   */\n  var rot13 = function rot13(string) {\n    return string.replace(/[a-z]/ig, function (_char) {\n      return String.fromCharCode(_char.charCodeAt(0) + 13 - 26 * /[n-z]/i.test(_char));\n    });\n  };\n\n  var _default = rot13; // TODO: Maybe replace it with `rotN`\n\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"./shift\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"./shift\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.shift);\n    global.shiftBits = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, _shift) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports[\"default\"] = void 0;\n  _shift = _interopRequireDefault(_shift);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  /**\n   * Rotate the character bits of a string. The 16 character bits of 'A' are\n   * `00000000 01000001` - if we shift the bits by -4 `n` digits they look like\n   * this `00010000 00000100`. This means that 'A' (0x41) becomes 'င' (0x1004).\n   * @param {string} string The input string.\n   * @param {number} [n=1] Number of digits to rotate the character bit.\n   *                     Positive for right rotation,\n   *                     negative for left rotation.\n   * @returns {string}\n   */\n  var shiftBits = function shiftBits(string) {\n    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return string.replace(/./g, function (m) {\n      return String.fromCodePoint(parseInt((0, _shift[\"default\"])(m.charCodeAt(0).toString(2).padStart(16, '0'), n), 2));\n    });\n  };\n\n  var _default = shiftBits;\n  _exports[\"default\"] = _default;\n});","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.unicode = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.unfixSurrogates = _exports.fixSurrogates = _exports[\"default\"] = void 0;\n\n  /**\n   * Functions for handle unicode stuff.\n   * @module stringMutilator/unicode\n   */\n\n  /**\n   * Checks if the given `char` is a high surrogate (U+D800 - U+DBFF).\n   * @private\n   * @param {string} char\n   * @returns {boolean}\n   */\n  var isHighSurrogate = function isHighSurrogate(_char) {\n    return /^[\\uD800-\\uDBFF]$/.test(_char);\n  };\n  /**\n   * Checks if the given `char` is a low surrogate (U+DC00 - U+DFFF).\n   * @private\n   * @param {string} char\n   * @returns {boolean}\n   */\n\n\n  var isLowSurrogate = function isLowSurrogate(_char2) {\n    return /^[\\uDC00-\\uDFFF]$/.test(_char2);\n  };\n  /**\n   * Fix unpaired high/low surrogates by adding a blank high/low surrogate\n   * (U+D800 or U+DC00) to the required location.\n   * @param {string} string The input string\n   * @returns {string}\n   */\n\n\n  var fixSurrogates = function fixSurrogates(string) {\n    var result = string;\n\n    for (var i = 0; i < result.length; i++) {\n      if (isHighSurrogate(result[i]) && (i + 1 === result.length || !isLowSurrogate(result[i + 1]))) {\n        result = result.slice(0, i + 1) + String.fromCharCode(0xDC00) + result.slice(i + 1);\n        i++;\n      } else if (isLowSurrogate(result[i]) && (i === 0 || !isHighSurrogate(result[i - 1]))) {\n        result = result.slice(0, i) + String.fromCharCode(0xD800) + result.slice(i);\n        i++;\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Remove the by `fixSurrogates` added blank high/low surrogates.\n   * @param {string} string The input string\n   * @returns {string}\n   */\n\n\n  _exports.fixSurrogates = fixSurrogates;\n\n  var unfixSurrogates = function unfixSurrogates(string) {\n    return string.replace(/([\\uD800|\\uDC00])/g, '');\n  };\n\n  _exports.unfixSurrogates = unfixSurrogates;\n  var _default = {\n    fixSurrogates: fixSurrogates,\n    unfixSurrogates: unfixSurrogates\n  };\n  _exports[\"default\"] = _default;\n});","const functionTypes = {\n  involutory: 0,\n  involutoryNegatedArgs: 1,\n  involutoryCounterFn: 2,\n  nonInvolutory: 3\n};\n\nconst definitions = [\n  {\n    name: 'charCase.invert',\n    type: functionTypes.involutoryNegatedArgs,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'every', type: 'number', default: 0 }\n    ]\n  },\n  {\n    name: 'compressor.pack',\n    type: functionTypes.involutoryCounterFn,\n    counterFn: 'compressor.unpack',\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'compressor.unpack',\n    type: functionTypes.involutoryCounterFn,\n    counterFn: 'compressor.pack',\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'compressor.signature',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'withEval', type: 'boolean', default: false }\n    ]\n  },\n  {\n    name: 'flipBits',\n    type: functionTypes.involutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'gobbledygook',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'jumble',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'runs', type: 'number', default: 3 }\n    ]\n  },\n  {\n    name: 'reverseBits',\n    type: functionTypes.involutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'reverse',\n    type: functionTypes.involutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'rockdotize',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'regexp', type: 'regexp', default: /\\w/gi }\n    ]\n  },\n  {\n    name: 'rot13',\n    type: functionTypes.involutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'scramble',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'shiftBits',\n    type: functionTypes.involutoryNegatedArgs,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'n', type: 'number', default: 1 }\n    ]\n  },\n  {\n    name: 'shift',\n    type: functionTypes.involutoryNegatedArgs,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'n', type: 'number', default: 1 }\n    ]\n  },\n  {\n    name: 'toMANS',\n    type: functionTypes.nonInvolutory,\n    args: [\n      { name: 'string', type: 'string' },\n      { name: 'type', type: 'number', default: 0, min: 0, max: 12 }\n    ]\n  },\n  {\n    name: 'unicode.fixSurrogates',\n    type: functionTypes.involutoryCounterFn,\n    counterFn: 'unicode.unfixSurrogates',\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  },\n  {\n    name: 'unicode.unfixSurrogates',\n    type: functionTypes.involutoryCounterFn,\n    counterFn: 'unicode.fixSurrogates',\n    args: [\n      { name: 'string', type: 'string' }\n    ]\n  }\n];\n\nexport default definitions;\n\nexport\n{\n  functionTypes\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport clsx from 'clsx';\n\nimport stringMutilator from '@0x04/string-mutilator';\nimport definitions, { functionTypes } from './definitions';\n\nimport './styles.scss';\n\nconst getRealValue = (string, type = 'string') =>\n{\n  switch (type)\n  {\n    default:\n      return string;\n\n    case 'number':\n      let result = parseInt(string, 10);\n\n      if (isNaN(result))\n      {\n        throw new TypeError('Number is \\'NaN\\'!');\n      }\n      return result;\n\n    case 'boolean':\n      return /^(1|true|y(es)|on?)$/.test(string);\n\n    case 'regexp':\n      let source = string.slice(1, string.lastIndexOf(string[0]));\n      let flags = string.slice(string.lastIndexOf(string[0]) + 1);\n      return new RegExp(source, flags);\n  }\n};\n\n\nconst AppContext = React.createContext({});\n\n\nclass AppProvider extends React.Component\n{\n  state = {\n    input: '',\n    output: '',\n    sequences: [],\n    sequenceString: {\n      value: '',\n      error: null\n    },\n    definitions,\n    definitionGroups: [\n        'Involutory',\n        'Involutory with negated arguments',\n        'Involutory with counter function',\n        'Non involutory'\n      ].map(\n        (label, index) => [\n          label,\n          definitions\n            .filter((definition) => definition.type === index)\n            .map((definition) => definition.name)\n        ]\n      ),\n\n    setInput: (input) => this.state.handleChange({ input }),\n\n    isDefinition: (name) =>\n    {\n      return this.state.definitions\n        .some((definition) => definition.name === name);\n    },\n\n    getDefinition: (name) =>\n    {\n      let definition = this.state.definitions\n        .find((definition) => definition.name === name);\n\n      if (!definition)\n      {\n        throw new TypeError(`Definition '${name}' not found!`);\n      }\n\n      return definition;\n    },\n\n    getSequenceDefaults: (name = '') =>\n    {\n      let args = [];\n\n      if (name.length > 0)\n      {\n        args = this.state.getDefinition(name).args\n          .slice(1)\n          .map((arg) => arg.default);\n      }\n\n      return { name, args };\n    },\n\n    getSequenceOutput: (sequences) =>\n    {\n      return sequences.reduce(\n        (previous, current) => (current.error === null && current.output)\n          ? current.output\n          : previous,\n        ''\n      )\n    },\n\n    createSequence: (index = this.state.sequences.length, name = '') =>\n    {\n      if (index < 0 || index > this.state.sequences.length)\n      {\n        throw new TypeError(`Invalid index ${index}!`);\n      }\n\n      let sequences = this.state.sequences.concat();\n\n      sequences.splice(index, 0, this.state.getSequenceDefaults(name));\n\n      this.state.handleChange({ sequences });\n    },\n\n    updateSequence: (index, name = '', args = []) =>\n    {\n      if (index < 0 || index >= this.state.sequences.length)\n      {\n        throw new TypeError(`Invalid index ${index}!`);\n      }\n\n      let sequences = this.state.sequences.concat();\n      let sequence = { ...sequences[index], name, args };\n\n      if (sequences[index].name !== name)\n      {\n        sequence.args = this.state.getSequenceDefaults(name).args;\n      }\n\n      sequences.splice(index, 1, sequence);\n\n      this.state.handleChange({ sequences });\n    },\n\n    deleteSequence: (index) =>\n    {\n      if (index < 0 || index >= this.state.sequences.length)\n      {\n        throw new TypeError(`Invalid index ${index}!`);\n      }\n\n      let sequences = this.state.sequences.concat();\n\n      sequences.splice(index, 1);\n\n      this.state.handleChange({ sequences });\n    },\n\n    clearSequences: () => this.setState({ sequences: [] }),\n\n    invertSequences: () =>\n    {\n      let sequences = [];\n\n      this.state.sequences.forEach((sequence) => {\n        let definition = this.state.getDefinition(sequence.name);\n\n        switch (definition.type)\n        {\n          default:\n            sequences.unshift({ name: '', args: [] });\n            break;\n\n          case functionTypes.involutory:\n            sequences.unshift({ name: sequence.name, args: [] });\n            break;\n\n          case functionTypes.involutoryNegatedArgs:\n            sequences.unshift({\n              name: sequence.name,\n              args: sequence.args.map((arg) => arg * -1)\n            });\n            break;\n\n          case functionTypes.involutoryCounterFn:\n            // TODO: How to handle arguments?\n            sequences.unshift({\n              name: definition.counterFn,\n              args: []\n            });\n            break;\n\n          case functionTypes.nonInvolutory:\n            sequences.unshift({\n              name: sequence.name,\n              args: sequence.args.concat(),\n              // TODO: The error is overwritten in `proceed`\n              error: 'This function is not invertible!'\n            });\n            break;\n        }\n      });\n\n      this.state.handleChange({ input: this.state.output, sequences });\n    },\n\n    setSequenceString: (string) => {\n      let sequences = [];\n      let sequenceString = { value: string, error: null };\n\n      try\n      {\n        if (string.length > 0)\n        {\n          sequences = this.state.parseSequenceString(string);\n        }\n      }\n      catch (e)\n      {\n        sequenceString.error = e.message;\n      }\n\n      this.state.proceed(this.state.input, sequences);\n\n      let output = this.state.getSequenceOutput(sequences) || this.state.input;\n\n      this.setState({ output, sequences, sequenceString });\n    },\n\n    buildSequenceString: (sequences = this.state.sequences) => sequences\n      .map((sequence) =>\n      {\n        let result = [];\n\n        if (sequence.name)\n        {\n          result.push(sequence.name);\n\n          if (sequence.args.length > 0)\n          {\n            result.push(`,${sequence.args.join(',')}`);\n          }\n        }\n\n        return (result.length > 0)\n          ? result.join('')\n          : null;\n      })\n      .filter((value) => value !== null)\n      .join('|'),\n\n    parseSequenceString: (string) => string.split(/\\s*\\|\\s*/)\n      .map((value) =>\n      {\n        let [ name, ...args ] = value.split(/\\s*,\\s*/);\n        let definitionArgs = this.state.getDefinition(name).args.slice(1);\n\n        if (args.length !== definitionArgs.length)\n        {\n          throw new TypeError(`Wrong number of arguments for '${name}'!`);\n        }\n\n        args = args.map(\n          (value, index) => getRealValue(value, definitionArgs[index].type)\n        );\n\n        return { name, args };\n      }),\n\n    execute: (dotString, params) =>\n    {\n      const fn = dotString\n        .split('.')\n        .reduce((o, c) => o[c], stringMutilator);\n\n      return fn.apply(null, params);\n    },\n\n    proceed: (input, sequences) =>\n    {\n      let previous;\n      let errorIndex = -1;\n\n      for (let i = 0; i < sequences.length; i++)\n      {\n        let current = sequences[i];\n\n        try\n        {\n          current.error = null;\n\n          if ((errorIndex > -1 && errorIndex < i) || !current.name)\n          {\n            current.output = '';\n          }\n          else\n          {\n            current.output = this.state.execute(\n              current.name,\n              [ previous?.output || input, ...current.args ]\n            );\n          }\n        }\n        catch (e)\n        {\n          current.output = '';\n          current.error = e.message;\n          errorIndex = i;\n        }\n\n        previous = current;\n      }\n\n      return sequences;\n    },\n\n    handleChange: ({\n      input = this.state.input,\n      sequences = this.state.sequences.concat(),\n      sequenceString = { ...this.state.sequenceString }\n    }) =>\n    {\n      this.state.proceed(input, sequences);\n\n      let output = this.state.getSequenceOutput(sequences) || input;\n\n      try\n      {\n        sequenceString.error = null;\n        sequenceString.value = this.state.buildSequenceString(sequences);\n      }\n      catch (e) {\n        sequenceString.error = e.message;\n      }\n\n      this.setState({ input, output, sequences, sequenceString });\n    }\n  }\n\n  render() {\n    return (\n      <AppContext.Provider value={this.state}>\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\n\nconst blindText = 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. '\n  + 'Esse explicabo nesciunt nulla? Adipisci consequuntur cum debitis enim '\n  + 'exercitationem ipsa minima natus nulla, obcaecati porro provident quia '\n  + 'quo ullam vel voluptate.';\n\n\nconst App = () => {\n  function createActions(context) {\n    return (\n      <div className=\"action-container\">\n        <div className=\"spacer\"/>\n        <button\n          className=\"action action-clear\"\n          onClick={() => context.clearSequences()}>\n          Clear Functions\n        </button>\n        <button\n          className=\"action action-create\"\n          onClick={() => context.createSequence(0)}>\n          Add Function\n        </button>\n      </div>\n    )\n  }\n\n  function createFunctions(context) {\n    let functions = context.sequences.map(\n      (sequence, index) => <Function\n        key={index}\n        index={index}\n        name={sequence.name}\n        definition={(context.isDefinition(sequence.name))\n          ? context.getDefinition(sequence.name)\n          : {}\n        }\n        sequence={context.sequences[index]}\n        onRemoveClick={() => context.deleteSequence(index)}\n        onAddClick={() => context.createSequence(index + 1)}\n      />\n    )\n\n    return (\n      <div className=\"functions-container\">\n        {functions}\n      </div>\n    )\n  }\n\n  return (\n    <AppProvider>\n      <div className=\"app-component\">\n        <h1 className=\"title\">Pseudo Cipherer</h1>\n        <div className=\"description\">\n          <p>A demonstration of the <code>\n            <a\n              href=\"https://github.com/0x04/string-mutilator\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              @0x04/string-mutilator\n            </a>\n          </code> package.\n          </p>\n          <p>\n            Enter some text or use the <AppContext.Consumer>\n            {\n              (context) => <button className=\"action-link\" onClick={(event) => {\n                event.preventDefault()\n                context.setInput(blindText)\n              }}>blind text</button>\n            }\n          </AppContext.Consumer> and add a function to see the result in\n            the output pane.\n          </p>\n        </div>\n        <AppContext.Consumer>\n          {(context) => (\n            <>\n              <Input\n                id=\"string-input\"\n                label=\"Input\"\n                value={context.input}\n                onChange={(event) => context.setInput(event.target.value)}\n                onClear={() => context.setInput('')}\n              />\n              {createActions(context)}\n              {createFunctions(context)}\n              <Output\n                label=\"Output\"\n                value={context.output}\n                collapsable={false}\n              />\n              <SequenceString />\n            </>\n          )}\n        </AppContext.Consumer>\n      </div>\n    </AppProvider>\n  )\n};\n\n\nfunction Input(props)\n{\n  return (\n    <div className=\"input-component\">\n      <label htmlFor={props.id}>{props.label}</label>\n      <div className=\"horizontal-container\">\n        <textarea\n          id={props.id}\n          className=\"input\"\n          value={props.value}\n          onChange={props.onChange}\n          placeholder=\"Please enter text&hellip;\"\n        />\n        <input\n          type=\"reset\"\n          value=\"Clear\"\n          onClick={props.onClear}\n        />\n      </div>\n    </div>\n  );\n}\n\n\nconst Function = (props) =>\n{\n  return (\n    <div className={clsx('function-component', (props.definition.type !== undefined) && `function-type-${props.definition.type}`)}>\n      <div className=\"horizontal-container\">\n        <div className=\"vertical-container\">\n          <FunctionSelect index={props.index} name={props.name}/>\n          {\n            (props.definition.args?.length > 1)\n              ? <FunctionParams index={props.index} name={props.name}/>\n              : null\n          }\n          {\n            (props.sequence.error)\n              ? <div className=\"error-container\">\n                  {props.sequence.error}\n                </div>\n              : null\n          }\n          <Output label=\"Output\" value={props.sequence.output} />\n        </div>\n        <div className=\"action-container\">\n          <button\n            className=\"action action-delete\"\n            onClick={() => props.onRemoveClick?.()}>\n            Remove Function\n          </button>\n          <button\n            className=\"action action-create\"\n            onClick={() => props.onAddClick?.()}>\n            Add Function\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nconst FunctionSelect = (props) =>\n{\n  return (\n    <div className=\"function-select-component\">\n      <label>\n        <span>Function</span>\n        <AppContext.Consumer>\n          {\n            (context) => <select\n              value={props.name}\n              onChange={(event) => context.updateSequence(props.index, event.target.value)}>\n              <option value=\"\" />\n              {\n                context.definitionGroups.map((group, groupIndex) =>\n                {\n                  const [ label, fns ] = group;\n\n                  return (\n                    <optgroup\n                      className={`function-type-${groupIndex}`}\n                      key={groupIndex}\n                      label={label}>\n                      {\n                        fns.map(\n                          (fn, fnIndex) => <option key={fnIndex} value={fn}>{fn}</option>\n                        )\n                      }\n                    </optgroup>\n                  );\n                })\n              }\n            </select>\n          }\n        </AppContext.Consumer>\n      </label>\n    </div>\n  );\n};\n\n\nconst FunctionParams = (props) =>\n{\n  return (\n    <div className='function-params-component'>\n      <table className=\"function-params\">\n        <thead>\n          <tr>\n            <th>Argument</th>\n            <th>Type</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <AppContext.Consumer>\n          {\n            (context) => {\n              const args = context.sequences[props.index].args\n              const lines = context.getDefinition(props.name).args.slice(1).map(\n                (property, index) => <tr key={index}>\n                  <td>{property.name}</td>\n                  <td>{property.type}</td>\n                  <td>\n                    <FunctionParamRenderer\n                      onChange={(value) => {\n                        const newArgs = args.concat()\n                        newArgs.splice(index, 1, value)\n                        context.updateSequence(props.index, props.name, newArgs)\n                      }}\n                      {...property}\n                      value={args[index]}\n                    />\n                  </td>\n                </tr>\n              );\n              return (<tbody>{lines}</tbody>);\n            }\n          }\n        </AppContext.Consumer>\n      </table>\n    </div>\n  );\n};\n\n\nclass FunctionParamRenderer extends React.Component\n{\n  state = {\n    valid: true\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event)\n  {\n    let valid = true;\n    let value = (event.target.type === 'checkbox')\n      ? event.target.checked\n      : event.target.value;\n\n    try {\n      value = getRealValue(value, this.props.type);\n    }\n    catch (e) {\n      valid = false;\n    }\n\n    this.setState({ valid });\n\n    this.props.onChange\n      && this.props.onChange(value);\n  }\n\n  render()\n  {\n    let renderer = <div />;\n\n    switch (this.props.type)\n    {\n      default:\n      case 'number':\n        renderer = <input\n          type=\"number\"\n          min={this.props.min}\n          max={this.props.max}\n          value={this.props.value}\n          onChange={this.handleChange}\n        />;\n        break;\n\n      case 'boolean':\n        renderer = <input\n          type=\"checkbox\"\n          checked={this.props.value}\n          onChange={this.handleChange}\n        />\n        break;\n\n      case 'regexp':\n        renderer = <input\n          type=\"text\"\n          value={this.props.value}\n          className={!this.state.valid ? 'invalid' : null}\n          onChange={this.handleChange}\n        />\n        break;\n    }\n\n    return (\n      <div className={`function-param-renderer type-${this.props.type}`}>\n        {renderer}\n      </div>\n    );\n  }\n}\n\n\nclass Output extends React.Component\n{\n  static defaultProps = {\n    collapsable: true\n  }\n\n  state = {\n    collapsed: true\n  }\n\n  render()\n  {\n    return (\n      <div\n        className={clsx('output-component', (this.props.collapsable && this.state.collapsed) && ' collapsed')}>\n        <div className=\"label\">\n          {\n            (this.props.collapsable)\n              ? <button\n                  className=\"action-link\"\n                  onClick={() => this.setState({ collapsed: !this.state.collapsed })}>\n                  {this.props.label}\n                </button>\n              : <span>{this.props.label}</span>\n          }\n        </div>\n        <div\n          className=\"content\"\n          style={{ display: !this.props.collapsable || !this.state.collapsed ? 'block' : 'none' }}>\n          <div className=\"horizontal-container\">\n            <pre className=\"output\">\n              {this.props.value}\n            </pre>\n            <CopyButton value={this.props.value} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass CopyButton extends React.Component\n{\n  static defaultProps = {\n    value: ''\n  }\n\n  copyToClipboard(text)\n  {\n    const previousFocus = window.activeElement;\n    const textarea = document.createElement('textarea');\n    textarea.className = 'copy-button-helper';\n    textarea.value = text;\n\n    document.body.appendChild(textarea);\n\n    textarea.select();\n    // For mobile devices\n    textarea.setSelectionRange(0, textarea.value.length);\n\n    document.execCommand('copy');\n\n    textarea.remove();\n\n    previousFocus && previousFocus.focus();\n  }\n\n  render()\n  {\n    return (\n      <button\n        className=\"action action-copy\"\n        onClick={() => this.copyToClipboard(this.props.value)}>\n        Copy\n      </button>\n    );\n  }\n}\n\n\nclass SequenceString extends React.Component\n{\n  state = {\n    orientation: false\n  }\n\n  render()\n  {\n    return (\n      <AppContext.Consumer>\n        {(context) => (\n          <div className=\"sequence-string-component\">\n            <label className=\"label\" htmlFor=\"cipher-sequence\">Cipher/Decipher-Sequence</label>\n            <div className=\"vertical-container\">\n              <textarea\n                id=\"cipher-sequence\"\n                className=\"output\"\n                value={context.sequenceString.value}\n                onChange={(event) => context.setSequenceString(event.target.value)}\n              />\n              {\n                (context.sequenceString.error)\n                  ? <div className=\"error-container\">{context.sequenceString.error}</div>\n                  : null\n              }\n              </div>\n            <CopyButton value={context.sequenceString.value} />\n            <button\n              className=\"action action-invert\"\n              onClick={() => context.invertSequences()}>\n              Invert\n            </button>\n          </div>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}