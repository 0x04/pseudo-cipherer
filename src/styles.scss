$color-blue: #00F;
$color-cyan: #0FF;
$color-green: #0F0;
$color-magenta: #F0F;
$color-red: #F00;
$color-yellow: #FF0;


@font-face {
  font-family: 'System Serif';
  src:
    local(-apple-system),
    local(BlinkMacSystemFont),
    local("Segoe UI"),
    local(Roboto),
    Local(Helvetica),
    local(Arial),
    local(sans-serif),
    local("Apple Color Emoji"),
    local("Segoe UI Emoji"),
    local("Segoe UI Symbol");
}

@font-face {
  font-family: 'System Mono';
  src:
    local(Consolas),
    local(monospace);
}

*
{
  box-sizing: border-box;
}

:root
{
  --color-bg-0: #FFF;
  --color-bg-1: #EEE;
  --color-bg-2: #D0D0D0;
  --color-border-0: #FFF;
  --color-border-1: #999;
  --color-text: #333;

  --color-bright-blue:    #{lighten($color-blue, 20%)};
  --color-bright-cyan:    #{lighten($color-cyan, 20%)};
  --color-bright-green:   #{lighten($color-green, 20%)};
  --color-bright-magenta: #{lighten($color-magenta, 20%)};
  --color-bright-red:     #{lighten($color-red, 20%)};
  --color-bright-yellow:  #{lighten($color-yellow, 20%)};

  --color-blue:    #{darken($color-blue, 20%)};
  --color-cyan:    #{darken($color-cyan, 20%)};
  --color-green:   #{darken($color-green, 20%)};
  --color-magenta: #{darken($color-magenta, 20%)};
  --color-red:     #{darken($color-red, 20%)};
  --color-yellow:  #{darken($color-yellow, 20%)};
}

html,
body,
.app-component
{
  min-height: 100vh;
}

body
{
  font-family: 'System Serif', sans-serif;
  font-size: 1rem;
  line-height: 1.25;
  color: var(--color-text);
  margin: 0;
  padding: 0;
  background-color: var(--color-bg-0);
  background-image: linear-gradient(
    45deg,
    transparent,
    transparent 25%,
    var(--color-bg-1) 25%,
    var(--color-bg-1) 50%,
    transparent 50%,
    transparent 75%,
    var(--color-bg-1) 75%
  );
  background-size: 128px 128px;
  background-position: -32px 0;
}

:focus
{
  outline: 0;
  box-shadow: 0 0 3px var(--color-bright-blue);
}

a
{
  color: var(--color-bright-blue);

  &:link,
  &:visited
  {
    color: var(--color-bright-blue);
  }
}

code
{
  font-family: "System Mono", monospace;
  font-size: 1rem;
}

pre
{
  margin: 0;
}

textarea
{
  font-family: 'System Mono', monospace;
  font-size: 1rem;
  line-height: 1.25rem;
  display: block;
}

.horizontal-container
{
  display: flex;
}

.vertical-container
{
  flex-grow: 1;

  > *:not(:last-child)
  {
    margin: 0 0 0.25rem 0;
  }
}

.action-container
{
  display: flex;
  justify-content: flex-end;
  align-items: flex-end;

  .spacer
  {
    flex-grow: 1;
  }

  .action
  {
    margin-left: 0.25rem;
    white-space: pre;
  }
}


.error-container
{
  padding: 0.25rem;
  background-color: var(--color-bright-red);
}

button.action-link
{
  font-family: 'System Serif', sans-serif;
  font-size: 1rem;
  text-decoration: underline;
  background: none;
  border: none;
  border-radius: 0;
  margin: 0;
  padding: 0;
  color: var(--color-bright-blue);
  cursor: pointer;
}

button,
input[type='button'],
input[type='reset'],
input[type='submit']
{
  font-family: 'System Serif', sans-serif;
  font-size: 0.75rem;
  border-width: 1px;
  border-style: solid;
  border-color:
    var(--color-border-0)
    var(--color-border-1)
    var(--color-border-1)
    var(--color-border-0);
  border-radius: 0.25rem;
  background: var(--color-bg-2);
  margin: 0;
  padding: 0.0625rem 0.5rem;

  &:active
  {
    border-color:
      var(--color-border-1)
      var(--color-border-0)
      var(--color-border-0)
      var(--color-border-1);
  }
}


.app-component
{
  max-width: 50rem;
  margin: auto;
  padding: 0.25rem 0.5rem;
  background: var(--color-bg-0);
  border-color: var(--color-bg-1);
  border-style: solid;
  border-width: 0 0.5rem;

  .title
  {
    margin: 0 0 0.5rem 0;
    font-weight: bolder;
    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.25);
  }

  .description
  {
    margin: 0 0 1rem 0;

    p
    {
      margin: 0 0 0.25rem 0;
    }
  }
}

.content-component
{
  > .output-component
  {
    background-color: var(--color-bg-1);
    border-radius: 0.25rem;
    margin: 0 0 0.5rem 0;
    padding: 0.5rem;
  }
}

.input-component
{
  padding: 0.5rem;
  background-color: var(--color-bg-1);
  margin: 0 0 0.5rem 0;
  border-radius: 0.25rem;

  label,
  .label
  {
    flex-grow: 2;
    width: 100%;
    font-weight: bolder;
    display: block;
    margin: 0 0 0.25rem 0;
  }

  textarea
  {
    flex-grow: 1;
    resize: vertical;
    width: 100%;
    min-height: 4.5rem;
    padding: 0.25rem;
  }

  input[type='reset'],
  button
  {
    flex-grow: 1;
    min-width: 4rem;
    max-width: 4rem;
    margin-left: 0.25rem;
  }
}


.output-component
{
  .label
  {
    width: 100%;
    font-weight: bold;
    margin: 0 0 0.5rem 0;

    &:after
    {
      margin-right: 0.25rem;
    }

    > .action-link
    {
      color: var(--color-text);
      font-weight: bold;
      text-decoration: none;

      &::before
      {
        content: '\2BC6';
        padding: 0 0.25rem 0 0;
      }
    }
  }

  &.collapsed
  {
    .label .action-link::before
    {
      content: '\2BC8';
    }
  }

  .output
  {
    flex-grow: 1;
    font-family: 'System Mono', monospace;
    font-size: 1rem;
    line-height: 1.25rem;
    min-height: 4.5rem;
    padding: 0.25rem;
    background-color: var(--color-bg-2);
    white-space: normal;
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-all;
    overflow: auto;
  }

  .action
  {
    flex-grow: 1;
    margin-left: 0.25rem;
    min-width: 4rem;
    max-width: 4rem;
  }
}

.input-component,
.output-component,
.sequence-component
{
  label .length,
  .label .length
  {
    margin: 0 0 0 0.25rem;
  }
}

.function-list-component
{
  > .action-container
  {
    background-color: var(--color-bg-1);
    padding: 0.5rem;
    margin: 0 0 0.5rem 0;
    border-radius: 0.25rem;
  }
}

.function-component
{
  background-color: var(--color-bg-1);
  padding: 0.5rem;
  margin: 0 0 0.5rem 0;
  border-radius: 0.25rem;

  .horizontal-container
  {
    .function-options
    {
      > .action-disable
      {
        margin: auto 0.5rem auto 0;
      }

      > .function-select-component
      {
        width: 100%;
      }
    }

    > .function-container
    {
      flex-grow: 1;

      > *:not(:last-child)
      {
        margin: 0 0 0.25rem 0;
      }

      > .output-component.collapsed .label
      {
        margin: 0;
      }
    }
  }
}


.function-type-0
{
  background-color: var(--color-bright-green);
}

.function-type-1
{
  background-color: var(--color-bright-cyan);
}

.function-type-2
{
  background-color: var(--color-bright-yellow);
}

.function-type-3
{
  background-color: var(--color-bright-red);
}


.function-select-component
{
  > label
  {
    display: flex;
    font-weight: bold;

    > span
    {
      flex-grow: 0;
      margin-right: 0.25rem;
    }
  }

  select
  {
    flex-grow: 1;
    width: 100%;
    font-family: 'System Mono', monospace;
    font-size: 1rem;
  }
}


.function-params-component
{
  border-radius: 4px;

  .function-params
  {
    border-spacing: 0;
    border-collapse: collapse;
    width: 100%;
    margin: 0.25rem 0 0 0;

    th,
    td
    {
      border: 1px solid var(--color-bg-2);
      text-align: center;
      padding: 4px 8px;
      background-color: rgba(255, 255, 255, 0.5);
      width: 100%;

      &:first-child
      {
        text-align: left;
      }
    }

    input.invalid
    {
      background-color: var(--color-bright-red);
    }
  }
}

.sequence-component
{
  background-color: var(--color-bg-1);
  padding: 0.5rem;
  margin: 0 0 0.5rem 0;
  border-radius: 0.25rem;

  display: grid;
  grid-gap: 0.25rem;
  grid-template-columns: auto 4rem 4rem 4rem;

  label,
  .label
  {
    grid-column: 1 / span 4;

    font-weight: bolder;
    display: block;
    margin: 0 0 0.25rem 0;
  }

  .output
  {
    grid-column: 1;
    font-family: 'System Mono', monospace;
    font-size: 1rem;
    line-height: 1.25rem;
    min-height: 4.5rem;
    padding: 0.25rem;
    white-space: normal;
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-all;
    overflow: auto;
  }

  textarea.output
  {
    width: 100%;
    display: block;
    resize: vertical;
  }

  pre.output
  {
    background-color: var(--color-bg-2);
  }

  .action-copy
  {
    grid-row: 2 / 3;
    grid-column: 2;
  }

  .action-copy-cipher-string
  {
    background: var(--color-bright-green);
    grid-row: 2 / 3;
    grid-column: 3;
  }

  .action-invert
  {
    grid-row: 2 / 3;
    grid-column: 4;
  }
}

.modal-component
{
  //pointer-events: none;
  display: none;
  background: rgba(0, 0, 0, 0.5);
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  &.visible
  {
    display: flex;
  }

  > .modal-content
  {
    margin: auto;
  }

  .action-close
  {
    appearance: none;
    background: none;
    outline: none;
    box-shadow: none;
    border: none;
    border-radius: 0;
    margin: 0;
    padding: 0;
    position: fixed;
    width: 2rem;
    height: 2rem;
    top: 1rem;
    right: 1rem;
    cursor: pointer;

    &::before,
    &::after
    {
      content: '';
      display: block;
      background: black;
      width: 0.2rem;
      height: 2rem;
      position: absolute;
      top: 50%;
      left: 50%;
      transform-origin: 0 0;
    }

    &::before
    {
      transform: rotate(-45deg) translate(-50%, -50%);
    }

    &::after
    {
      transform: rotate(45deg) translate(-50%, -50%);
    }
  }
}

.decipherer-component
{
  padding: 0.5rem;
  background: var(--color-bg-0);
  border: 0.5rem solid var(--color-bg-1);

  max-width: 50vw;
  min-width: 40rem;

  > .input
  {
    display: block;
    margin: 0 0 0.25rem 0;
    width: 100%;
    max-height: 40vw;
    min-height: 30rem;
    resize: vertical;
  }

  > .error-container
  {
    margin: 0 0 0.25rem 0;
  }

}